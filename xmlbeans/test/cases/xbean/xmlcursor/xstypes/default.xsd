<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="validElemDefault"   type="xs:int" default="1"/>
<!-- BAU: we can't compile any more because it's invalid
  <xs:element name="invalidElemDefault" type="xs:int" default="a"/>
-->
  <xs:element name="validElemFixed"     type="xs:int" fixed="2"/>
<!-- BAU: we can't compile any more because it's invalid
  <xs:element name="invalidElemFixed"   type="xs:int" fixed="b"/>
-->

  <xs:element name="validAttrDefault">
    <xs:complexType>
      <xs:attribute name="attr" type="xs:int" default="3"/>
    </xs:complexType>
  </xs:element>

<!-- BAU: we can't compile any more because it's invalid
  <xs:element name="invalidAttrDefault">
    <xs:complexType>
      <xs:attribute name="attr" type="xs:int" default="c"/>
    </xs:complexType>
  </xs:element>
-->

  <xs:element name="validAttrFixed">
    <xs:complexType>
      <xs:attribute name="aricttr" type="xs:int" fixed="4"/>
    </xs:complexType>
  </xs:element>

<!-- BAU: we can't compile any more because it's invalid
  <xs:element name="invalidAttrFixed">
    <xs:complexType>
      <xs:attribute name="attr" type="xs:int" fixed="d"/>
    </xs:complexType>
  </xs:element>
-->    
  <!-- types to help test nil -->

  <xs:element name="canBeNil" nillable="true">
    <xs:complexType>
    </xs:complexType>
  </xs:element>

</xs:schema>
