<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.w3.org/2001/XMLSchema"
     targetNamespace="http://java.sun.com/xml/ns/j2ee"
     xmlns:j2ee="http://java.sun.com/xml/ns/j2ee"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema"
     elementFormDefault="qualified"
     attributeFormDefault="unqualified"
     version="2.0">
<xsd:annotation>
<xsd:documentation>
@(#)jsp_2_0.xsds	1.10 08/20/02
</xsd:documentation>
</xsd:annotation>

<xsd:annotation>
<xsd:documentation>

Copyright 2002 Sun Microsystems, Inc., 901 San Antonio
Road, Palo Alto, California 94303, U.S.A. All rights
reserved.

Sun Microsystems, Inc. has intellectual property rights
relating to technology described in this document. In
particular, and without limitation, these intellectual
property rights may include one or more of the U.S. patents
listed at http://www.sun.com/patents and one or more
additional patents or pending patent applications in the
U.S. and other countries.

This document and the technology which it describes are
distributed under licenses restricting their use, copying,
distribution, and decompilation. No part of this document
may be reproduced in any form by any means without prior
written authorization of Sun and its licensors, if any.

Third-party software, including font technology, is
copyrighted and licensed from Sun suppliers.

Sun, Sun Microsystems, the Sun logo, Solaris, Java, J2EE,
JavaServer Pages, Enterprise JavaBeans and the Java Coffee
Cup logo are trademarks or registered trademarks of Sun
Microsystems, Inc. in the U.S. and other countries.

Federal Acquisitions: Commercial Software - Government Users
Subject to Standard License Terms and Conditions.

</xsd:documentation>
</xsd:annotation>

<xsd:annotation>
<xsd:documentation>

This is the XML Schema for the JSP 2.0 deployment descriptor
types.  The JSP 2.0 schema contains all the special
structures and datatypes that are necessary to use JSP files
from a web application.

The contents of this schema is used by the web-app_2_4.xsd
file to define JSP specific content.

</xsd:documentation>
</xsd:annotation>

<xsd:annotation>
<xsd:documentation>

The following conventions apply to all J2EE
deployment descriptor elements unless indicated otherwise.

- In elements that specify a pathname to a file within the
  same JAR file, relative filenames (i.e., those not
  starting with "/") are considered relative to the root of
  the JAR file's namespace.  Absolute filenames (i.e., those
  starting with "/") also specify names in the root of the
  JAR file's namespace.  In general, relative names are
  preferred.  The exception is .war files where absolute
  names are preferred for consistency with the Servlet API.

</xsd:documentation>
</xsd:annotation>

<xsd:include schemaLocation="j2ee_1_4.xsd"/>


<!-- **************************************************** -->

<xsd:complexType name="jsp-configType">
<xsd:annotation>
<xsd:documentation>

The jsp-configType is used to provide global configuration
information for the JSP files in a web application. It has
two subelements, taglib and jsp-property-group.

</xsd:documentation>
</xsd:annotation>

    <xsd:sequence>
        <xsd:element name="taglib"
                     type="j2ee:taglibType"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
        <xsd:element name="jsp-property-group"
                     type="j2ee:jsp-property-groupType"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
    </xsd:sequence>

</xsd:complexType>

<!-- **************************************************** -->

<xsd:simpleType name="jsp-fileType">
<xsd:annotation>
<xsd:documentation>

The jsp-file element contains the full path to a JSP file
within the web application beginning with a `/'.

</xsd:documentation>
</xsd:annotation>

    <xsd:restriction base="j2ee:pathType"/>

</xsd:simpleType>

<!-- **************************************************** -->

<xsd:complexType name="jsp-property-groupType">
<xsd:annotation>
<xsd:documentation>

The jsp-property-groupType is used to group a number of
files so they can be given global property information.
All files so described are deemed to be JSP files.  The
following additional properties can be described:

    - Control enabling of EL evaluation.
    - Control enabling of Scripting elements.
    - Indicate pageEncoding information.
    - Indicating that a resource is a JSP document
    - Prelude and Coda automatic includes.

</xsd:documentation>
</xsd:annotation>

    <xsd:sequence>
	<xsd:element name="description"
		     type="j2ee:descriptionType"
		     minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element name="display-name"
		     type="j2ee:display-nameType"
		     minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element name="url-pattern"
                     type="j2ee:url-patternType"
                     maxOccurs="unbounded"/>
        <xsd:element name="el-enabled"
                     type="j2ee:true-falseType"
                     minOccurs="0">
        <xsd:annotation>
        <xsd:documentation>

        Can be used to easily set the isELEnabled
        property of a group of JSP pages.  By default, the
        EL evaluation is enabled for Web Applications using
        a Servlet 2.4 or greater web.xml.

        </xsd:documentation>
        </xsd:annotation>
        </xsd:element>
        <xsd:element name="page-encoding"
                     type="j2ee:string"
                     minOccurs="0">
        <xsd:annotation>
        <xsd:documentation>

        The valid values of page-encoding are those of the
        pageEncoding page directive. It is a
        translation-time error to define the pageEncoding
        of a JSP page through one value in the JSP
        configuration element and then give it a different
        value in a pageEncoding directive, but it is legal
        to give it the same value.

        </xsd:documentation>
        </xsd:annotation>
        </xsd:element>
        <xsd:element name="scripting-enabled"
                     type="j2ee:true-falseType"
                     minOccurs="0">
        <xsd:annotation>
        <xsd:documentation>

        Can be used to easily set the isScriptingEnabled
        property of a group of JSP pages.  By default,
        scripting is enabled.

        </xsd:documentation>
        </xsd:annotation>
        </xsd:element>
	<xsd:element name="is-xml"
		     type="j2ee:true-falseType"
		     minOccurs="0">
        <xsd:annotation>
        <xsd:documentation>

        If true, denotes that the group of resources
	that match the URL pattern are JSP documents,
	and thus must be interpreted as XML documents.
	If false, the resources are assumed to not
	be JSP documents, unless there is another
	property group that indicates otherwise.

        </xsd:documentation>
        </xsd:annotation>
        </xsd:element>
        <xsd:element name="include-prelude"
                     type="j2ee:pathType"
                     minOccurs="0"
                     maxOccurs="unbounded">
        <xsd:annotation>
        <xsd:documentation>

        The include-prelude element is a context-relative
        path that must correspond to an element in the
        Web Application.  When the element is present,
        the given path will be automatically included (as
        in an include directive) at the beginning of each
        JSP page in this jsp-property-group.

        </xsd:documentation>
        </xsd:annotation>
        </xsd:element>
        <xsd:element name="include-coda"
                     type="j2ee:pathType"
                     minOccurs="0"
                     maxOccurs="unbounded">
        <xsd:annotation>
        <xsd:documentation>

        The include-coda element is a context-relative
        path that must correspond to an element in the
        Web Application.  When the element is present,
        the given path will be automatically included (as
        in an include directive) at the end of each
        JSP page in this jsp-property-group.

        </xsd:documentation>
        </xsd:annotation>
        </xsd:element>
    </xsd:sequence>

</xsd:complexType>

<!-- **************************************************** -->

<xsd:complexType name="taglibType">
<xsd:annotation>
<xsd:documentation>

A taglib can be used to provide information on a tag
library that is used by a JSP page within the Web
Application.

</xsd:documentation>
</xsd:annotation>

    <xsd:sequence>
        <xsd:element name="taglib-uri"
                     type="j2ee:string">
        <xsd:annotation>
        <xsd:documentation>

        A taglib-uri element describes a URI identifying a
        tag library used in the web application.  The body
        of the taglib-uri element may be either an
        absolute URI specification, or a relative URI.
        There should be no entries in web.xml with the
        same taglib-uri value.

        </xsd:documentation>
        </xsd:annotation>
        </xsd:element>

        <xsd:element name="taglib-location"
                     type="j2ee:pathType">
        <xsd:annotation>
        <xsd:documentation>

        the taglib-location element contains the location
        (as a resource relative to the root of the web
        application) where to find the Tag Library
        Description file for the tag library.

        </xsd:documentation>
        </xsd:annotation>
        </xsd:element>

    </xsd:sequence>

</xsd:complexType>

</xsd:schema>

